{"version":3,"sources":["webpack:///./src/containers/Root/styled.tsx","webpack:///./src/containers/Root/index.tsx"],"names":["Flash","styled","div","PageTransition","withMemo","dispatch","useDispatch","$pageTransition","useRef","screen","useSelector","selectors","app","photoMode","photoThemeIndex","shareUrl","imageRenditions","animateStartTransition","useCallback","gsap","timeline","set","current","transformOrigin","to","scaleX","duration","ease","Power2","easeInOut","add","actions","setScreen","Screen","capture","animateRestartTransition","restart","handleOnStartClick","handleOnPictureTaken","image","theme","mode","sendBase64Image","final","handleOnThemeIndexChange","index","setPhotoThemeIndex","handleOnModeChange","setPhotoMode","handleOnRestartClick","home","onStartClick","themeIndex","onPictureTaken","onThemeIndexChange","onModeChange","onRestartClick","ref","className"],"mappings":"uOAEaA,EAAQC,IAAOC,IAAV,oEAAGD,CAAH,6HAYLE,EAAiBF,IAAOC,IAAV,6EAAGD,CAAH,qKCuIZG,uBArIsB,WACnC,IAAMC,EAAWC,cAIXC,EAAkBC,iBAAO,MAIzBC,EAASC,YAAYC,IAAUC,IAAIH,QACnCI,EAAYH,YAAYC,IAAUC,IAAIC,WACtCC,EAAkBJ,YAAYC,IAAUC,IAAIE,iBAC5CC,EAAWL,YAAYC,IAAUC,IAAIG,UACrCC,EAAkBN,YAAYC,IAAUC,IAAII,iBAI5CC,EAAyBC,uBAAY,WAC9BC,IAAKC,WAEbC,IAAId,EAAgBe,QAAS,CAC9BC,gBAAiB,iBAEhBC,GAAGjB,EAAgBe,QAAS,CAC3BG,OAAQ,EACRC,SAAU,GACVC,KAAMC,IAAOC,YAEdC,KAAI,WACHzB,EAAS0B,IAAQnB,IAAIoB,UAAU,CAAEvB,OAAQwB,IAAOC,cAEjDb,IAAId,EAAgBe,QAAS,CAC5BC,gBAAiB,gBAElBC,GACCjB,EAAgBe,QAChB,CACEG,OAAQ,EACRC,SAAU,GACVC,KAAMC,IAAOC,WAEf,YAEH,CAACxB,IAEE8B,EAA2BjB,uBAAY,WAChCC,IAAKC,WAEbC,IAAId,EAAgBe,QAAS,CAC9BC,gBAAiB,iBAEhBC,GAAGjB,EAAgBe,QAAS,CAC3BG,OAAQ,EACRC,SAAU,GACVC,KAAMC,IAAOC,YAEdC,KAAI,WACHzB,EAAS0B,IAAQnB,IAAIwB,cAEtBf,IAAId,EAAgBe,QAAS,CAC5BC,gBAAiB,gBAElBC,GACCjB,EAAgBe,QAChB,CACEG,OAAQ,EACRC,SAAU,GACVC,KAAMC,IAAOC,WAEf,YAEH,CAACxB,IAIEgC,EAA4DnB,uBAAY,WAC5ED,MACC,CAACA,IAEEqB,EAA+DpB,uBACnE,SAACqB,EAAOC,EAAOC,GACbpC,EAAS0B,IAAQnB,IAAI8B,gBAAgB,CAAEH,QAAOC,QAAOC,UAErDpC,EAAS0B,IAAQnB,IAAIoB,UAAU,CAAEvB,OAAQwB,IAAOU,WAElD,CAACtC,IAGGuC,EAAuE1B,uBAC3E,SAAC2B,GACCxC,EAAS0B,IAAQnB,IAAIkC,mBAAmB,CAAED,aAE5C,CAACxC,IAGG0C,EAA2D7B,uBAC/D,SAACuB,GACCpC,EAAS0B,IAAQnB,IAAIoC,aAAa,CAAEP,YAEtC,CAACpC,IAGG4C,EAAmE/B,uBAAY,WACnFiB,MACC,CAACA,IAIJ,OACE,kBAAC,IAAD,KACG1B,IAAWwB,IAAOiB,MAAQ,kBAAC,IAAD,CAAkBC,aAAcd,IAC1D5B,IAAWwB,IAAOC,SACjB,kBAAC,IAAD,CACEO,KAAM5B,EACNuC,WAAYtC,EACZuC,eAAgBf,EAChBgB,mBAAoBV,EACpBW,aAAcR,IAGjBtC,IAAWwB,IAAOU,OACjB,kBAAC,IAAD,CACE5B,SAAUA,EACVC,gBAAiBA,EACjBwC,eAAgBP,IAGpB,kBAAC,EAAD,CAAmBQ,IAAKlD,IACxB,kBAAC,EAAD,CAAUmD,UAAU","file":"component---src-containers-root-index-tsx-fb5fe07290340158cf82.js","sourcesContent":["import styled from 'styled-components'\n\nexport const Flash = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n  background-color: white;\n  opacity: 0;\n  z-index: 200;\n  pointer-events: none;\n`\n\nexport const PageTransition = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n  background-color: white;\n  pointer-events: none;\n  z-index: 200;\n  transform: scaleX(0);\n  transform-origin: right center;\n`\n","import React, { FC, useCallback, useRef } from 'react'\nimport { PageProps } from 'gatsby'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { gsap, Power2 } from 'gsap'\n\nimport withMemo from '../../decorators/withMemo'\nimport { Layout } from '../../components'\nimport { CaptureScreenTemplate, FinalScreenTemplate, HomepageTemplate } from '../../templates'\nimport { actions, selectors } from '../../redux'\nimport { Screen } from '../../types/global'\nimport { CaptureTemplateProps } from '../../templates/CaptureScreen'\nimport { FinalScreenTemplateProps } from '../../templates/FinalScreen'\nimport { HomepageTemplateProps } from '../../templates/Homepage'\n\nimport * as SC from './styled'\n\nconst RootContainer: FC<PageProps> = () => {\n  const dispatch = useDispatch()\n\n  // ref\n\n  const $pageTransition = useRef(null)\n\n  // SELECTORS\n\n  const screen = useSelector(selectors.app.screen)\n  const photoMode = useSelector(selectors.app.photoMode)\n  const photoThemeIndex = useSelector(selectors.app.photoThemeIndex)\n  const shareUrl = useSelector(selectors.app.shareUrl)\n  const imageRenditions = useSelector(selectors.app.imageRenditions)\n\n  // ANIMATION\n\n  const animateStartTransition = useCallback(() => {\n    const tl = gsap.timeline()\n\n    tl.set($pageTransition.current, {\n      transformOrigin: 'right center',\n    })\n      .to($pageTransition.current, {\n        scaleX: 1,\n        duration: 0.7,\n        ease: Power2.easeInOut,\n      })\n      .add(() => {\n        dispatch(actions.app.setScreen({ screen: Screen.capture }))\n      })\n      .set($pageTransition.current, {\n        transformOrigin: 'left center',\n      })\n      .to(\n        $pageTransition.current,\n        {\n          scaleX: 0,\n          duration: 0.7,\n          ease: Power2.easeInOut,\n        },\n        '+=0.25'\n      )\n  }, [dispatch])\n\n  const animateRestartTransition = useCallback(() => {\n    const tl = gsap.timeline()\n\n    tl.set($pageTransition.current, {\n      transformOrigin: 'right center',\n    })\n      .to($pageTransition.current, {\n        scaleX: 1,\n        duration: 0.7,\n        ease: Power2.easeInOut,\n      })\n      .add(() => {\n        dispatch(actions.app.restart())\n      })\n      .set($pageTransition.current, {\n        transformOrigin: 'left center',\n      })\n      .to(\n        $pageTransition.current,\n        {\n          scaleX: 0,\n          duration: 0.7,\n          ease: Power2.easeInOut,\n        },\n        '+=0.25'\n      )\n  }, [dispatch])\n\n  // HANDLERS\n\n  const handleOnStartClick: HomepageTemplateProps['onStartClick'] = useCallback(() => {\n    animateStartTransition()\n  }, [animateStartTransition])\n\n  const handleOnPictureTaken: CaptureTemplateProps['onPictureTaken'] = useCallback(\n    (image, theme, mode) => {\n      dispatch(actions.app.sendBase64Image({ image, theme, mode }))\n\n      dispatch(actions.app.setScreen({ screen: Screen.final }))\n    },\n    [dispatch]\n  )\n\n  const handleOnThemeIndexChange: CaptureTemplateProps['onThemeIndexChange'] = useCallback(\n    (index) => {\n      dispatch(actions.app.setPhotoThemeIndex({ index }))\n    },\n    [dispatch]\n  )\n\n  const handleOnModeChange: CaptureTemplateProps['onModeChange'] = useCallback(\n    (mode) => {\n      dispatch(actions.app.setPhotoMode({ mode }))\n    },\n    [dispatch]\n  )\n\n  const handleOnRestartClick: FinalScreenTemplateProps['onRestartClick'] = useCallback(() => {\n    animateRestartTransition()\n  }, [animateRestartTransition])\n\n  // RETURN\n\n  return (\n    <Layout>\n      {screen === Screen.home && <HomepageTemplate onStartClick={handleOnStartClick} />}\n      {screen === Screen.capture && (\n        <CaptureScreenTemplate\n          mode={photoMode}\n          themeIndex={photoThemeIndex}\n          onPictureTaken={handleOnPictureTaken}\n          onThemeIndexChange={handleOnThemeIndexChange}\n          onModeChange={handleOnModeChange}\n        />\n      )}\n      {screen === Screen.final && (\n        <FinalScreenTemplate\n          shareUrl={shareUrl}\n          imageRenditions={imageRenditions}\n          onRestartClick={handleOnRestartClick}\n        />\n      )}\n      <SC.PageTransition ref={$pageTransition} />\n      <SC.Flash className=\"flash\" />\n    </Layout>\n  )\n}\n\nexport default withMemo(RootContainer)\n"],"sourceRoot":""}